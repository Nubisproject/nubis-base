[agent]
    ; in immortal mode, the agent that encounter a fatal error
    ; will attempt to restart itself instead of just shutting down
    isimmortal      = {{ if exists "/config/isimmortal" }}{{ getv "/config/isimmortal" }}{{ else }}on{{ end }}

    ; installservice orders the agent to deploy a service init configuration
    ; and start itself during the endpoint's boot process
    installservice  = {{ if exists "/config/installservice" }}{{ getv "/config/installservice" }}{{ else }}on{{ end }}

    ; attempt to retrieve the public IP behind which the agent is running
    discoverpublicip = {{ if exists "/config/discoverpublicip" }}{{ getv "/config/discoverpublicip" }}{{ else }}on{{ end }}

    ; attempt to discover AWS metadata such as instance ID on startup
    discoverawsmeta = {{ if exists "/config/discoverawsmeta" }}{{ getv "/config/discoverawsmeta" }}{{ else }}on{{ end }}

    ; in check-in mode, the agent connects to the relay, runs all pending commands
    ; and exits. this mode is used to run the agent as a cron job, not a daemon.
    checkin          = {{ if exists "/config/checkin" }}{{ getv "/config/checkin" }}{{ else }}off{{ end }}

    ; connection string to the MIG relay. must contain credentials.
    relay           = "amqps://{{ if exists "/config/relay_user" }}{{ getv "/config/relay_user" }}{{ else }}agent{{ end }}:{{ getv "/config/relay_password" }}@{{ if exists "/config/relay" }}{{ getv "/config/relay" }}{{ else }}publicrelay.mig.mozilla.org:443/mig{{ end }}"

    ; location of the local stat socket
    socket          = "127.0.0.1:51664"
    
    ; comma delimited list of host:port proxies to use, if desired
    ; the agent will attempt to try to proxies for public ip retrieval
    ; and the relay connection before a direct connection
    proxies = "proxy.service.consul:3128"

    ; frequency at which heartbeat messages are sent to the MIG relay
    heartbeatfreq   = {{ if exists "/config/heartbeatfreq" }}{{ getv "/config/heartbeatfreq" }}{{ else }}60s{{ end }}

    ; timeout after which a module that has not finished is killed by the agent
    moduletimeout   = {{ if exists "/config/moduletimeout" }}{{ getv "/config/moduletimeout" }}{{ else }}1800s{{ end }}

    ; location of the mig api
    api             = {{ if exists "/config/api" }}{{ getv "/config/api" }}{{ else }}https://api.mig.mozilla.org/api/v1{{ end }}

[certs]
    ca      = "/etc/mig/ca.crt"
    cert    = "/etc/mig/agent.crt"
    key     = "/etc/mig/agent.key"

[logging]
    mode        = "file" ; stdout | file | syslog
    level       = "info"
    file        = "/var/log/mig.log"
